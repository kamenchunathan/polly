-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PollApi.Union.PollField exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode
import PollApi.InputObject
import PollApi.Interface
import PollApi.Object
import PollApi.Scalar
import PollApi.ScalarCodecs
import PollApi.Union


type alias Fragments decodesTo =
    { onPollCharField : SelectionSet decodesTo PollApi.Object.PollCharField
    , onPollTextField : SelectionSet decodesTo PollApi.Object.PollTextField
    , onPollChoiceField : SelectionSet decodesTo PollApi.Object.PollChoiceField
    , onPollMultiChoiceField : SelectionSet decodesTo PollApi.Object.PollMultiChoiceField
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo PollApi.Union.PollField
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "PollCharField" selections____.onPollCharField
        , Object.buildFragment "PollTextField" selections____.onPollTextField
        , Object.buildFragment "PollChoiceField" selections____.onPollChoiceField
        , Object.buildFragment "PollMultiChoiceField" selections____.onPollMultiChoiceField
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onPollCharField = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPollTextField = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPollChoiceField = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPollMultiChoiceField = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
